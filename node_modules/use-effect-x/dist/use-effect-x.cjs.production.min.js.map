{"version":3,"file":"use-effect-x.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface IChangedItemObj {\n  previous: any;\n  next: any;\n  changed: boolean;\n  isFirstRun?: boolean;\n}\ninterface IUseEffectCallback {\n  changedItem: IChangedItemObj[] | null;\n}\n\ntype TUseEffectCallback = (changeditemInObj: IUseEffectCallback) => any;\n\n// Delete me\nexport function useEffectX(\n  callback: TUseEffectCallback,\n  dependency: any[] | undefined\n) {\n  const dependencyRef = React.useRef<null | any[] | undefined>(null);\n\n  const changedDependencyRef = React.useRef<null | any[]>(null);\n\n  const callbackRef = React.useRef(callback);\n\n  callbackRef.current = callback;\n\n  React.useEffect(() => {\n    if (dependency) {\n      if (dependencyRef.current) {\n        changedDependencyRef.current = dependency.map((elem, index) => {\n          if (dependencyRef.current?.[index] === elem) {\n            return {\n              previous: elem,\n              next: elem,\n              changed: false,\n            };\n          }\n\n          return {\n            previous: dependencyRef.current?.[index],\n            next: elem,\n            changed: true,\n          };\n        });\n      } else {\n        changedDependencyRef.current = dependency.map(elem => {\n          return {\n            previous: undefined,\n            next: elem,\n            changed: true,\n            isFirstRun: true,\n          };\n        });\n      }\n    }\n\n    callbackRef.current({\n      changedItem: changedDependencyRef.current,\n    });\n    dependencyRef.current = dependency;\n  }, [\n    ...(() => {\n      if (Array.isArray(dependency)) {\n        return [dependency];\n      } else {\n        return [Math.random()];\n      }\n    })(),\n    changedDependencyRef,\n  ]);\n}\n"],"names":["callback","dependency","dependencyRef","React","changedDependencyRef","callbackRef","current","map","elem","index","previous","next","changed","_dependencyRef$curren2","undefined","isFirstRun","changedItem","Array","isArray","Math","random"],"mappings":"uHAgBEA,EACAC,OAEMC,EAAgBC,SAAuC,MAEvDC,EAAuBD,SAA2B,MAElDE,EAAcF,SAAaH,GAEjCK,EAAYC,QAAUN,EAEtBG,aAAgB,WACVF,IAEAG,EAAqBE,QAAUL,EAAWM,IADxCL,EAAcI,QAC8B,SAACE,EAAMC,4BAC/CP,EAAcI,8BAAUG,MAAWD,EAC9B,CACLE,SAAUF,EACVG,KAAMH,EACNI,SAAS,GAIN,CACLF,mBAAUR,EAAcI,4BAAdO,EAAwBJ,GAClCE,KAAMH,EACNI,SAAS,IAIiC,SAAAJ,SACrC,CACLE,cAAUI,EACVH,KAAMH,EACNI,SAAS,EACTG,YAAY,MAMpBV,EAAYC,QAAQ,CAClBU,YAAaZ,EAAqBE,UAEpCJ,EAAcI,QAAUL,cAGlBgB,MAAMC,QAAQjB,GACT,CAACA,GAED,CAACkB,KAAKC,WAGjBhB"}