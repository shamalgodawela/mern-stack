{"version":3,"file":"use-effect-x.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface IChangedItemObj {\n  previous: any;\n  next: any;\n  changed: boolean;\n  isFirstRun?: boolean;\n}\ninterface IUseEffectCallback {\n  changedItem: IChangedItemObj[] | null;\n}\n\ntype TUseEffectCallback = (changeditemInObj: IUseEffectCallback) => any;\n\n// Delete me\nexport function useEffectX(\n  callback: TUseEffectCallback,\n  dependency: any[] | undefined\n) {\n  const dependencyRef = React.useRef<null | any[] | undefined>(null);\n\n  const changedDependencyRef = React.useRef<null | any[]>(null);\n\n  const callbackRef = React.useRef(callback);\n\n  callbackRef.current = callback;\n\n  React.useEffect(() => {\n    if (dependency) {\n      if (dependencyRef.current) {\n        changedDependencyRef.current = dependency.map((elem, index) => {\n          if (dependencyRef.current?.[index] === elem) {\n            return {\n              previous: elem,\n              next: elem,\n              changed: false,\n            };\n          }\n\n          return {\n            previous: dependencyRef.current?.[index],\n            next: elem,\n            changed: true,\n          };\n        });\n      } else {\n        changedDependencyRef.current = dependency.map(elem => {\n          return {\n            previous: undefined,\n            next: elem,\n            changed: true,\n            isFirstRun: true,\n          };\n        });\n      }\n    }\n\n    callbackRef.current({\n      changedItem: changedDependencyRef.current,\n    });\n    dependencyRef.current = dependency;\n  }, [\n    ...(() => {\n      if (Array.isArray(dependency)) {\n        return [dependency];\n      } else {\n        return [Math.random()];\n      }\n    })(),\n    changedDependencyRef,\n  ]);\n}\n"],"names":["useEffectX","callback","dependency","dependencyRef","React","changedDependencyRef","callbackRef","current","map","elem","index","previous","next","changed","undefined","isFirstRun","changedItem","Array","isArray","Math","random"],"mappings":";;;;;;SAegBA,WACdC,UACAC;AAEA,MAAMC,aAAa,GAAGC,YAAA,CAAuC,IAAvC,CAAtB;AAEA,MAAMC,oBAAoB,GAAGD,YAAA,CAA2B,IAA3B,CAA7B;AAEA,MAAME,WAAW,GAAGF,YAAA,CAAaH,QAAb,CAApB;AAEAK,EAAAA,WAAW,CAACC,OAAZ,GAAsBN,QAAtB;AAEAG,EAAAA,eAAA,CAAgB;AACd,QAAIF,UAAJ,EAAgB;AACd,UAAIC,aAAa,CAACI,OAAlB,EAA2B;AACzBF,QAAAA,oBAAoB,CAACE,OAArB,GAA+BL,UAAU,CAACM,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP;;;AAC5C,cAAI,0BAAAP,aAAa,CAACI,OAAd,gFAAwBG,KAAxB,OAAmCD,IAAvC,EAA6C;AAC3C,mBAAO;AACLE,cAAAA,QAAQ,EAAEF,IADL;AAELG,cAAAA,IAAI,EAAEH,IAFD;AAGLI,cAAAA,OAAO,EAAE;AAHJ,aAAP;AAKD;;AAED,iBAAO;AACLF,YAAAA,QAAQ,4BAAER,aAAa,CAACI,OAAhB,2DAAE,uBAAwBG,KAAxB,CADL;AAELE,YAAAA,IAAI,EAAEH,IAFD;AAGLI,YAAAA,OAAO,EAAE;AAHJ,WAAP;AAKD,SAd8B,CAA/B;AAeD,OAhBD,MAgBO;AACLR,QAAAA,oBAAoB,CAACE,OAArB,GAA+BL,UAAU,CAACM,GAAX,CAAe,UAAAC,IAAI;AAChD,iBAAO;AACLE,YAAAA,QAAQ,EAAEG,SADL;AAELF,YAAAA,IAAI,EAAEH,IAFD;AAGLI,YAAAA,OAAO,EAAE,IAHJ;AAILE,YAAAA,UAAU,EAAE;AAJP,WAAP;AAMD,SAP8B,CAA/B;AAQD;AACF;;AAEDT,IAAAA,WAAW,CAACC,OAAZ,CAAoB;AAClBS,MAAAA,WAAW,EAAEX,oBAAoB,CAACE;AADhB,KAApB;AAGAJ,IAAAA,aAAa,CAACI,OAAd,GAAwBL,UAAxB;AACD,GAlCD,YAmCM;AACF,QAAIe,KAAK,CAACC,OAAN,CAAchB,UAAd,CAAJ,EAA+B;AAC7B,aAAO,CAACA,UAAD,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAACiB,IAAI,CAACC,MAAL,EAAD,CAAP;AACD;AACF,GANE,EAnCL,GA0CEf,oBA1CF;AA4CD;;;;"}